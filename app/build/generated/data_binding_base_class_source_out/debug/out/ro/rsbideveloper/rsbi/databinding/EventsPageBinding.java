// Generated by view binder compiler. Do not edit!
package ro.rsbideveloper.rsbi.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ro.rsbideveloper.rsbi.R;

public final class EventsPageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button EventsPageBtn;

  @NonNull
  public final FloatingActionButton EventsPageFloatbtnAddEvent;

  @NonNull
  public final ConstraintLayout EventsPageLayout;

  @NonNull
  public final RecyclerView EventsPageRecyclerView;

  private EventsPageBinding(@NonNull ConstraintLayout rootView, @NonNull Button EventsPageBtn,
      @NonNull FloatingActionButton EventsPageFloatbtnAddEvent,
      @NonNull ConstraintLayout EventsPageLayout, @NonNull RecyclerView EventsPageRecyclerView) {
    this.rootView = rootView;
    this.EventsPageBtn = EventsPageBtn;
    this.EventsPageFloatbtnAddEvent = EventsPageFloatbtnAddEvent;
    this.EventsPageLayout = EventsPageLayout;
    this.EventsPageRecyclerView = EventsPageRecyclerView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static EventsPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EventsPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.events_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EventsPageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Events_page_btn;
      Button EventsPageBtn = rootView.findViewById(id);
      if (EventsPageBtn == null) {
        break missingId;
      }

      id = R.id.Events_page_floatbtn_add_event;
      FloatingActionButton EventsPageFloatbtnAddEvent = rootView.findViewById(id);
      if (EventsPageFloatbtnAddEvent == null) {
        break missingId;
      }

      ConstraintLayout EventsPageLayout = (ConstraintLayout) rootView;

      id = R.id.Events_page_recycler_view;
      RecyclerView EventsPageRecyclerView = rootView.findViewById(id);
      if (EventsPageRecyclerView == null) {
        break missingId;
      }

      return new EventsPageBinding((ConstraintLayout) rootView, EventsPageBtn,
          EventsPageFloatbtnAddEvent, EventsPageLayout, EventsPageRecyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
