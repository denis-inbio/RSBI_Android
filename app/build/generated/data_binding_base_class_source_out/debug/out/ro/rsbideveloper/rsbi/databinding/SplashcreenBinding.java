// Generated by view binder compiler. Do not edit!
package ro.rsbideveloper.rsbi.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ro.rsbideveloper.rsbi.R;

public final class SplashcreenBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button SplashscreenBtn;

  @NonNull
  public final Button SplashscreenBtnPicker;

  @NonNull
  public final Button SplashscreenBtnTestWebView;

  @NonNull
  public final ConstraintLayout SplashscreenLayout;

  private SplashcreenBinding(@NonNull ConstraintLayout rootView, @NonNull Button SplashscreenBtn,
      @NonNull Button SplashscreenBtnPicker, @NonNull Button SplashscreenBtnTestWebView,
      @NonNull ConstraintLayout SplashscreenLayout) {
    this.rootView = rootView;
    this.SplashscreenBtn = SplashscreenBtn;
    this.SplashscreenBtnPicker = SplashscreenBtnPicker;
    this.SplashscreenBtnTestWebView = SplashscreenBtnTestWebView;
    this.SplashscreenLayout = SplashscreenLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SplashcreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SplashcreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.splashcreen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SplashcreenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Splashscreen_btn;
      Button SplashscreenBtn = rootView.findViewById(id);
      if (SplashscreenBtn == null) {
        break missingId;
      }

      id = R.id.Splashscreen_btn_picker;
      Button SplashscreenBtnPicker = rootView.findViewById(id);
      if (SplashscreenBtnPicker == null) {
        break missingId;
      }

      id = R.id.Splashscreen_btn_test_web_view;
      Button SplashscreenBtnTestWebView = rootView.findViewById(id);
      if (SplashscreenBtnTestWebView == null) {
        break missingId;
      }

      ConstraintLayout SplashscreenLayout = (ConstraintLayout) rootView;

      return new SplashcreenBinding((ConstraintLayout) rootView, SplashscreenBtn,
          SplashscreenBtnPicker, SplashscreenBtnTestWebView, SplashscreenLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
